WEBVTT
Kind: captions
Language: ar

00:00:08.140 --> 00:00:10.320
ما هو المتغير النصي string ؟

00:00:10.440 --> 00:00:13.900
و كيف يمكننا قراءة مدخلات من المستخدم

00:00:14.240 --> 00:00:18.600
و كيف يمكن تحويل قيمة نصية  إلى قيمة عددية ؟

00:00:19.220 --> 00:00:21.560
و ما هي قواعد تسمية المتغيرات ؟

00:00:22.100 --> 00:00:24.140
هذا ما سوف نتعرف عليه

00:00:24.240 --> 00:00:25.960
في هذا الدرس بعد الفاصل

00:00:25.960 --> 00:00:27.140
ان شاء الله

00:00:35.300 --> 00:00:37.600
السلام عليكم و رحمة الله و بركاته

00:00:37.600 --> 00:00:40.220
و أهلاً و سهلاً بكم في الدرس التاسع

00:00:40.220 --> 00:00:43.000
من دروس سلسلة تعلم البرمجة

00:00:43.000 --> 00:00:44.220
للمبتدئين كلياً

00:00:44.220 --> 00:00:45.460
بواسطة الـ #C

00:00:46.240 --> 00:00:48.220
في الدرس الماضي تحدثنا عن المتغيرات ( Variables )

00:00:48.220 --> 00:00:49.140
الـ Variables

00:00:49.300 --> 00:00:51.700
و تعرفنا على النوع العددي integer

00:00:51.700 --> 00:00:53.760
من خلال الكلمة المحجوزة int

00:00:54.900 --> 00:00:58.300
الآن , سنتعرف على نوع جديد من المتغيرات

00:00:58.440 --> 00:00:59.980
تجدون على الشاشة

00:00:59.980 --> 00:01:01.580
المثال الذي قمنا بكتابته

00:01:01.580 --> 00:01:02.580
في الدرس السابق

00:01:03.240 --> 00:01:04.460
لا اريد  حذف الجمل

00:01:04.460 --> 00:01:05.780
التي قمت بكتابتها

00:01:06.220 --> 00:01:08.880
فبدلاً من ذلك سأقوم بتحويل الاسطر

00:01:08.880 --> 00:01:11.380
إلى اسطر ملاحظات

00:01:12.260 --> 00:01:15.080
و لكننا سنتعلم طريقة أسرع

00:01:15.080 --> 00:01:17.620
في كتابة الـ //

00:01:17.800 --> 00:01:18.920
في بداية كل سطر

00:01:19.340 --> 00:01:21.420
مما يوفر علينا الكثير من الوقت

00:01:21.540 --> 00:01:23.540
و ذلك من خلال طرقتين

00:01:24.080 --> 00:01:26.720
الأولى من خلال الأيقونة المتاحة

00:01:26.720 --> 00:01:28.720
في برنامج الـ Visual Studio

00:01:28.760 --> 00:01:32.940
فبعد اختيار جميع الأسطر المراد تحويلها

00:01:32.940 --> 00:01:34.560
إلى جمل ملاحظات

00:01:34.560 --> 00:01:36.820
قم بالضغط على الأيقونة في الاعلى

00:01:36.860 --> 00:01:38.260
التي تحمل الاسم

00:01:39.100 --> 00:01:42.440
Comment Out The Selected Lines

00:01:42.640 --> 00:01:45.740
بالضغط عليها ستجد أن الأسطر تحولت

00:01:45.740 --> 00:01:46.740
إلى جمل ملاحظات

00:01:46.740 --> 00:01:48.600
ذو لون أخضر

00:01:48.760 --> 00:01:50.840
و لإرجاع الجمل لوضعها الطبيعي

00:01:51.100 --> 00:01:52.140
يمكنك الضغط

00:01:52.140 --> 00:01:54.920
على الأيقونة المجاورة للأيقونة السابقة

00:01:54.920 --> 00:01:55.840
على اليمين

00:01:55.840 --> 00:01:56.840
ألا و هي

00:01:56.840 --> 00:02:00.045
Uncomment the selected lines

00:02:02.165 --> 00:02:05.485
و الطريقة الثانية و هي الطريقة الأكثر شيوعاً

00:02:05.485 --> 00:02:08.115
هي اضافة Slash واحدة     /

00:02:09.005 --> 00:02:10.275
في بداية

00:02:10.895 --> 00:02:13.315
السطر البرمجي

00:02:13.745 --> 00:02:17.075
Slash  /  ثم اتباعها بنجمة   *

00:02:17.555 --> 00:02:20.275
لتحديد بداية فقرة الملاحظة

00:02:20.615 --> 00:02:26.645
ثم في النهاية تقوم بإضافة نجمة     *   ثم

00:02:26.675 --> 00:02:31.065
Slash   /  لإنهاء تحديد فقرة الملاحظة

00:02:31.660 --> 00:02:34.320
الآن .. سأقوم بكتابة مثال جديد

00:02:34.320 --> 00:02:37.520
للتعرف على نوع آخر من أنواع بيانات المتغيرات

00:02:38.020 --> 00:02:41.280
و للسرعة سأقوم بكتابة المثال كاملاً

00:02:41.420 --> 00:02:44.440
ثم سنقوم بتفصيله بعد الإنتهاء منه

00:02:44.440 --> 00:02:47.180
يمكنك إيقاف الفيديو لكتابة المثال

00:02:47.180 --> 00:02:48.440
حالما أنتهي منه

00:05:13.425 --> 00:05:16.540
قبل البدء بشرح الاسطر التي قمت بكتابتها

00:05:16.540 --> 00:05:18.880
لا ننسى أن نقوم بحفظ الملف

00:05:18.880 --> 00:05:21.280
لنتأكد من عدم ضياع اي شيء

00:05:21.560 --> 00:05:22.960
و ذلك من خلال

00:05:22.960 --> 00:05:25.380
File   &gt;&gt;   Save All

00:05:25.500 --> 00:05:26.840
أو من خلال الأيقونة

00:05:26.840 --> 00:05:28.620
لموجودة على شريط الأدوات

00:05:28.680 --> 00:05:30.100
(القرصين Save All)

00:05:31.680 --> 00:05:35.280
مع ملاحظة أن البرنامج يقوم بالحفظ التلقائي

00:05:35.280 --> 00:05:37.660
كل مرة تقوم بتنفيذ التطبيق فيها

00:05:38.440 --> 00:05:40.700
التطبيق التالي يسأل المستخدم

00:05:40.700 --> 00:05:42.820
عن اسمه الأول و اسم عائلته

00:05:42.960 --> 00:05:46.620
و من ثم يقوم بطباعة جملة ترحيبية به

00:05:47.220 --> 00:05:49.440
و إن قمنا بتنفيذ التطبيق ...

00:05:53.355 --> 00:05:56.040
ستجد أنه يسألني عن اسمي

00:05:56.040 --> 00:05:57.165
What is your name ?

00:05:57.480 --> 00:05:59.680
ثم يطلب مني ادخال الاسم الأول

00:05:59.680 --> 00:06:01.660
Enter your first name :

00:06:01.660 --> 00:06:03.660
سأقوم بإدخال Osama

00:06:03.780 --> 00:06:08.320
ثم سأتبعها بزر Enter  من لوحة المفاتيح

00:06:08.320 --> 00:06:10.320
للانتقال إلى الطلب الثاني

00:06:10.660 --> 00:06:12.820
يطلب مني في الطلب الثاني

00:06:12.860 --> 00:06:15.540
Enter your last name :

00:06:15.860 --> 00:06:17.920
سأقوم بإدخال كلمة Deep

00:06:18.895 --> 00:06:22.140
ثم سأقوم بالضغط على زر Enter

00:06:22.140 --> 00:06:26.780
لأجد في النهاية أنه قام بطباعة جملة ترحيبية

00:06:26.860 --> 00:06:27.840
Hello Osama Deep

00:06:28.360 --> 00:06:32.740
و أخيراً سأقوم بالضغط على زر Enter

00:06:32.740 --> 00:06:34.900
للخروج من التطبيق و العودة إلى برنامج

00:06:35.340 --> 00:06:37.340
Visual Studio  الـ

00:06:38.720 --> 00:06:42.860
الآن لو نظرت إلى إلى الأسطر

00:06:42.860 --> 00:06:46.100
ستجد أن بعضها مألوفة لديك

00:06:47.140 --> 00:06:48.620
ففي السطر الأول هنا

00:06:50.055 --> 00:06:51.945
استخدمنا الدالة

00:06:52.760 --> 00:06:54.680
WriteLine

00:06:54.680 --> 00:06:58.660
لطباعة السؤال الموجود بين قوسي الدالة

00:06:59.440 --> 00:07:01.400
و لاحظ أننا استخدمنا

00:07:01.780 --> 00:07:02.420
WriteLine

00:07:02.540 --> 00:07:03.040
و ليس

00:07:03.040 --> 00:07:03.680
Write

00:07:03.880 --> 00:07:05.820
لأننا نريد طباعة السؤال

00:07:05.820 --> 00:07:07.820
ثم الانتقال إلى سطر جديد

00:07:08.500 --> 00:07:10.380
ثم في السطر الذي يليه

00:07:10.380 --> 00:07:13.780
قمنا باستخدام الـ Write method

00:07:13.780 --> 00:07:17.000
الموجودة في الـ Console Class

00:07:17.820 --> 00:07:19.920
هذا الـ Class سنقوم إن شاء الله

00:07:19.920 --> 00:07:21.920
بشرحه في الدروس المقبلة

00:07:22.420 --> 00:07:25.640
و الـ Write method تقوم بطباعة الجملة

00:07:25.640 --> 00:07:26.420
في نفس السطر

00:07:26.880 --> 00:07:28.400
لأننا نريد من المستخدم

00:07:28.400 --> 00:07:31.040
ادخال اسمه الأول في نفس السطر

00:07:31.480 --> 00:07:33.260
و في السطر التالي

00:07:33.260 --> 00:07:36.520
قمنا بتعريف متغير اسمه

00:07:36.580 --> 00:07:38.420
myFirstName

00:07:39.115 --> 00:07:40.880
و هو من النوع string

00:07:41.780 --> 00:07:44.860
و هو نوع جديد سنستخدمه كثيراً

00:07:44.860 --> 00:07:46.860
في تطبيقاتنا المستقبلية

00:07:47.240 --> 00:07:48.540
و يتيح لك هذا النوع

00:07:48.540 --> 00:07:51.200
وضع مجموعة من الخانات الموجودة

00:07:51.200 --> 00:07:53.020
على لوحة المفاتيح

00:07:53.020 --> 00:07:56.580
سواء كانت حروفاً أو أرقاماً أو حتى إشارات

00:07:57.215 --> 00:08:01.185
و كما تعلمنا قبل قليل بخصوص حجز المتغيرات

00:08:01.520 --> 00:08:03.520
فإننا نقوم هنا

00:08:03.820 --> 00:08:05.520
في هذا السطر

00:08:05.520 --> 00:08:11.000
بحجز موقع في الذاكرة يتناسب مع النوع string

00:08:11.740 --> 00:08:15.060
في السطر التالي ستجد تركيبة جديدة عليك

00:08:17.100 --> 00:08:21.120
و لتفسير هذا السطر سنقوم بتفكيكه إلى ثلاثة أقسام

00:08:21.120 --> 00:08:22.760
فالقسم الأول

00:08:23.000 --> 00:08:27.060
ألا و هو المتغير الذي نريد اسناد قيمة له

00:08:27.060 --> 00:08:29.060
ألا و هو myFirstName

00:08:29.800 --> 00:08:32.660
و القسم الثاني هي اشارة المساواة

00:08:32.880 --> 00:08:35.640
او الـ Assignment operator

00:08:36.540 --> 00:08:40.560
التي تحدثنا أنها تأخذ ما على يمينها

00:08:40.560 --> 00:08:43.240
وتضعه في ما على يسارها

00:08:44.920 --> 00:08:48.380
و القسم الثالث هو الجانب الأيمن من المساواة

00:08:49.100 --> 00:08:52.000
و هو الدالة ReadLine

00:08:52.000 --> 00:08:55.340
و لكنها أتت بحالة خاصة هنا

00:08:55.760 --> 00:08:58.040
فقد تعلمنا في الدروس السابقة

00:08:58.160 --> 00:08:59.540
أن الـ ReadLine method

00:08:59.780 --> 00:09:03.020
تستخدم لمنع التطبيق من الخروج المباشر

00:09:03.020 --> 00:09:05.020
عند الوصول إلى نهايته

00:09:05.100 --> 00:09:07.740
و ذلك بانتظار قيمة من المستخدم

00:09:08.000 --> 00:09:09.740
تنتهي بزر Enter

00:09:10.240 --> 00:09:13.640
و لكننا هنا نستخدمها لهدفها الحقيقي

00:09:13.640 --> 00:09:17.860
ألا و هو استخدام أو استقبال معلومات

00:09:17.860 --> 00:09:18.900
من المستخدم

00:09:19.680 --> 00:09:25.920
نقوم هنا بطلب معلومات من المستخدم

00:09:26.220 --> 00:09:29.660
لاستخدامها و معالجتها داخل تطبيقنا

00:09:29.900 --> 00:09:31.280
ففي هذا السطر

00:09:31.580 --> 00:09:33.660
سينتظر التطبيق من المستخدم

00:09:33.660 --> 00:09:36.780
أن يقوم بإدخال جملة تنتهي بزر Enter

00:09:37.400 --> 00:09:41.060
ثم سيقوم بإسناد ما قمنا بإدخاله

00:09:41.260 --> 00:09:44.100
إلى المتغير  myFirstName في الاسطر التالية

00:09:44.700 --> 00:09:45.880
في الاسطر التالية

00:09:46.360 --> 00:09:49.220
يقوم بتكرار ما قمنا بفعله مع المتغير

00:09:49.220 --> 00:09:50.140
myFirstName

00:09:50.380 --> 00:09:53.220
عدا أنه يسأل المستخدم عن اسم عائلته

00:09:53.880 --> 00:09:55.860
و يقوم بوضع القيمة المدخلة

00:09:55.860 --> 00:09:59.580
في المتغير النصي myLastNAme

00:10:00.380 --> 00:10:02.000
و في الجملة الأخيرة

00:10:02.620 --> 00:10:04.520
أو الجملة ما قبل الأخيرة

00:10:04.800 --> 00:10:06.900
و بعد اسناد قيم المتغيرين

00:10:07.260 --> 00:10:09.840
myLastName و myFirstName

00:10:11.075 --> 00:10:14.135
سنقوم بتركيب جملة جديدة

00:10:14.140 --> 00:10:16.820
أرحب فيها بالمستخدم

00:10:17.160 --> 00:10:20.300
و ذلك باستخدام اشارة الجمع

00:10:20.580 --> 00:10:25.300
و لاحظ هنا استخدام جديد لإشارة الجمع

00:10:26.580 --> 00:10:29.140
فلو ذهبنا إلى المثال الأول

00:10:29.280 --> 00:10:31.100
سنجد أن

00:10:32.740 --> 00:10:34.400
إشارة الجمع هنا

00:10:35.100 --> 00:10:40.340
استخدمت لجمع حاصل عددين من منظور حسابي

00:10:40.640 --> 00:10:43.760
أي أنه قام باستخدام هذه الإشارة

00:10:43.775 --> 00:10:46.060
من منظور حسابي

00:10:46.635 --> 00:10:48.605
لكن في مثالنا الأخير

00:10:49.395 --> 00:10:51.865
قمنا باستخدام هذه الإشارة

00:10:52.420 --> 00:10:56.440
لكي نقوم بربط الجمل (النص)

00:10:56.440 --> 00:11:00.500
مع نص آخر .. مع نص آخر .. و هكذا

00:11:03.320 --> 00:11:06.240
فأنا أود وصل كلمة Hello

00:11:06.520 --> 00:11:09.180
مع محتوى قيمة myFirstName

00:11:09.420 --> 00:11:10.720
Variable

00:11:12.345 --> 00:11:17.385
يجب أن نتعلم كيف تقوم نفس الإشارة الـ Operator

00:11:17.820 --> 00:11:22.140
بالتعامل مع أنواع المتغيرات المختلفة

00:11:22.640 --> 00:11:24.880
لأننا سنلاحظ أهمية ذلك

00:11:24.880 --> 00:11:27.500
كلما تقدمنا في دروس السلسلة

00:11:27.560 --> 00:11:28.640
إن شاء الله

00:11:28.905 --> 00:11:33.360
لاحظ أيضاً أنني قمت بإضافة مسافة واحدة

00:11:33.615 --> 00:11:35.980
بين الاسم الأول و الاسم الأخير

00:11:36.200 --> 00:11:39.645
فأنا لا أريد الحصول على الاسمين ملتصقين معاً

00:11:40.220 --> 00:11:44.700
و في السطر الأخير استخدمنا الدالة ReadLine

00:11:44.700 --> 00:11:47.320
لمنع التطبيق من الخروج مباشرةً

00:11:47.440 --> 00:11:49.720
و لتعطينا مهلة لمشاهدة النتائج

00:11:50.380 --> 00:11:54.260
لنقم مرة أخرى بتشغيل التطبيق و رؤية ما يقوم بعمله

00:11:54.780 --> 00:11:56.160
بالضغط على زر Start

00:11:57.720 --> 00:11:58.960
سيسألني التطبيق

00:11:58.960 --> 00:11:59.820
What is your name ?

00:11:59.820 --> 00:12:00.840
ما هو اسمك ؟

00:12:00.975 --> 00:12:02.685
Enter your first name :

00:12:02.820 --> 00:12:04.220
أدخل اسمك الأول

00:12:04.220 --> 00:12:05.980
سأقوم بإدخال Osama

00:12:05.980 --> 00:12:08.655
ثم سأقوم بالضغط على زر Enter

00:12:08.660 --> 00:12:10.800
يطلب مني اسمي الأخير

00:12:10.800 --> 00:12:12.800
سأقوم بإدخال Deep

00:12:13.000 --> 00:12:14.160
ثم زر Enter

00:12:14.340 --> 00:12:19.720
ليقوم في النهاية بطباعة جملة ترحبيبة

00:12:19.800 --> 00:12:24.620
باستخدام المتغيرين اللذين قمت بإدخالهما

00:12:24.700 --> 00:12:26.900
بعد الانتهاء من الأمثلة السابقة

00:12:26.900 --> 00:12:29.100
أصبحت تمتلك سلاحاً قوياً

00:12:29.100 --> 00:12:32.380
خلال مسيرتك لتعلم تطوير التطبيقات

00:12:32.780 --> 00:12:34.960
فمعرفة التعامل مع المتغيرات

00:12:34.960 --> 00:12:37.240
سواء كانت بحجز مكان لها

00:12:37.240 --> 00:12:40.840
أو باختيار نوع مناسب لما سوف تحتويه

00:12:41.200 --> 00:12:45.180
أو بكيفية اعطائها قيماً و استدعائها

00:12:45.320 --> 00:12:47.855
هي أهم ركائز تطوير التطبيقات

00:12:48.340 --> 00:12:51.485
فلا يخلو أي تطبيق من استخدام المتغيرات

00:12:51.485 --> 00:12:55.400
و بما أنك أصبحت قادراً على أخذ قيم من المستخدم

00:12:55.560 --> 00:12:57.100
أصبح بإمكانك الآن

00:12:57.100 --> 00:13:01.080
البدء بكتابة تطبيقات تقوم بمعالجة هذه القيم

00:13:01.420 --> 00:13:03.820
لإخراجها بصيغة تتناسب

00:13:03.820 --> 00:13:06.540
مع ما يحتاجه المستخدم من التطبيق

00:13:07.380 --> 00:13:10.580
الآن إليك خمس ملاحظات عن المتغيرات

00:13:10.800 --> 00:13:13.740
أريد منك أن تقوم بفهمها ثم حفظها

00:13:14.720 --> 00:13:15.980
الملاحظة الأولى

00:13:16.280 --> 00:13:19.705
قم بإعطاء اسم مناسب للمتغير

00:13:20.040 --> 00:13:22.400
و هو أمر في غاية الأهمية

00:13:22.680 --> 00:13:27.260
و هو ما يحدد إن كنت ستصبح مطوراً عادياً

00:13:27.380 --> 00:13:30.940
أم ستصبح مطوراً منظماً في شؤونك

00:13:31.640 --> 00:13:34.680
فلو رجعنا إلى المثال الأول هنا

00:13:36.060 --> 00:13:39.140
سنجد أني قمت باستخدام متغيرات

00:13:39.140 --> 00:13:40.480
x  و y

00:13:40.480 --> 00:13:42.480
اسماء المتغيرات x و y

00:13:43.080 --> 00:13:45.400
و هي متغيرات قد استخدمناها

00:13:45.400 --> 00:13:46.920
في حل المعادلات الرياضية

00:13:46.920 --> 00:13:47.820
في دراستنا

00:13:48.380 --> 00:13:51.700
لذلك قد تبدو مفهومة لديك

00:13:51.700 --> 00:13:54.120
إن قمت بالنظر لها للوهلة الأولى

00:13:54.360 --> 00:13:57.315
لكن عند البدء بالكتابة لمشاريع كبيرة

00:13:57.320 --> 00:14:00.600
يجب أن نكون حريصين على اعطاء المتغير

00:14:00.840 --> 00:14:03.640
اسماً يدل على وظيفته

00:14:03.640 --> 00:14:06.300
أو على طبيعة القيم التي سيحتويها

00:14:07.180 --> 00:14:10.260
فلو قمنا مثلا بتغيير المتغير هنا

00:14:10.520 --> 00:14:11.600
myFirstName

00:14:11.600 --> 00:14:12.400
إلى x

00:14:13.180 --> 00:14:14.680
سأقوم بتغييرهم

00:14:20.040 --> 00:14:23.120
و تركت مشروعك فترة من الزمن

00:14:23.120 --> 00:14:24.180
ثم عدت إليه

00:14:24.420 --> 00:14:27.840
ستسأل نفسك مستغرباً

00:14:28.500 --> 00:14:33.140
ليس لدي أي فكرة عن ما يقومو به المتغير   x

00:14:34.280 --> 00:14:37.420
ما يضطرك للعودة للأسطر السابقة

00:14:37.420 --> 00:14:39.580
لتتبع استخداماته

00:14:40.100 --> 00:14:43.580
و لعل تطبيقنا الحالي بسيط و قصير

00:14:44.040 --> 00:14:47.340
لكن تخيل غداً عندما يحتوي تطبيقك

00:14:47.340 --> 00:14:48.400
على مئات الأسطر

00:14:48.920 --> 00:14:50.320
سيكون من الصعب عليك

00:14:50.320 --> 00:14:53.820
تتبع الأسطر البرمجية لإيجاد وظيفة متغير ما

00:14:54.200 --> 00:14:58.500
لذلك احرص من الآن على انتقاء اسم مناسب للمتغير

00:14:59.160 --> 00:15:02.540
و حاول قدر الامكان أن يكون سهل القراءة

00:15:02.540 --> 00:15:06.200
و مفهوماً لأي شخص يقوم بقراءة أسطرك

00:15:06.580 --> 00:15:12.220
بحيث لو اضطررت للاستعانة بصديق أو لمساعدة صديق

00:15:12.640 --> 00:15:15.740
لا تدعه يعاني كثيراً لحل مشكلتك

00:15:16.000 --> 00:15:18.340
الحقيقة لقد عاينا كثيراً من هذه القضية

00:15:18.800 --> 00:15:23.380
يأتوننا ببرنامج و نحتاج وقتاً

00:15:23.380 --> 00:15:26.420
فقط  لتتبع المتغيرات و ما تقوم به

00:15:27.260 --> 00:15:29.680
و هذه النقطة مهمة جداً

00:15:30.040 --> 00:15:33.520
و هي فعلاً ما يميزك عن غيرك من المطورين

00:15:33.620 --> 00:15:37.380
الذين تجد أسطرهم البرمجية مليئة بـ

00:15:37.380 --> 00:15:43.120
...    و هكذا  R , b , xx , yy , ccc

00:15:44.240 --> 00:15:45.880
قم بإرجاع المتغير x

00:15:45.880 --> 00:15:48.520
إلى الاسم السابق myFirstName

00:15:55.720 --> 00:15:58.420
و ستلاحظ وجود خاصية جميلة

00:15:58.420 --> 00:15:59.960
في برنامج الـ Visual Studio

00:16:00.180 --> 00:16:02.560
والتي تسهل لك تعديل المتغيرات

00:16:02.880 --> 00:16:06.420
و تجعلك أسرع في تطوير و انتاج التطبيقات

00:16:06.780 --> 00:16:09.020
فبعد تغيير اي اسم متغير

00:16:09.020 --> 00:16:14.220
ستلاحظ وجود مصباح صغير بجانب السطر البرمجي

00:16:14.660 --> 00:16:21.340
أو تحت المتغير عندما تضع المؤشر عليه

00:16:21.680 --> 00:16:25.980
و هذا الضوء يسمى Quick Action

00:16:26.400 --> 00:16:27.980
حيث إن ضغطت عليه

00:16:27.980 --> 00:16:32.380
ستجد أنه يطرح عليك اقتراحاً هنا

00:16:32.980 --> 00:16:35.660
إن كنت تريد تغيير هذا المتغير

00:16:35.800 --> 00:16:38.020
في كل مكان قمت باستخدامه

00:16:38.520 --> 00:16:42.800
حتى على صعيد جميع ملفات مشروعك

00:16:42.800 --> 00:16:47.320
سأضغط عليه و ستجد أنه قام بتغيير المتغير

00:16:47.320 --> 00:16:49.320
في كل الأسطر التالية

00:16:50.100 --> 00:16:51.500
الملاحظة الثانية

00:16:51.500 --> 00:16:53.320
Camel Casing

00:16:53.320 --> 00:16:55.880
فلربما لاحظت أنني قمت باستخدام

00:16:55.880 --> 00:16:59.200
شكل غريب للمتغير myFirstName

00:16:59.400 --> 00:17:04.180
فهو يحتوي على احرف كبيرة في وسط الكلمة

00:17:04.580 --> 00:17:08.180
حرف الـ F كبير و حرف الـ N كبير

00:17:10.220 --> 00:17:12.380
للوهلة الأولى يبدو شيئاً غريباً

00:17:12.380 --> 00:17:14.380
و لكنك بعد أن تقوم بفهمه

00:17:14.660 --> 00:17:18.580
سأضمن لك أنك ستقوم باستخدامه بشكل أساسي

00:17:18.580 --> 00:17:20.580
لما فيه من سهولة لقراءة أسماء المتغيرات

00:17:22.560 --> 00:17:25.920
و هذه الطريقة تسمى Camel Casing

00:17:26.220 --> 00:17:29.400
حيث اقتبس المطورون شكل سنم الجمل

00:17:29.460 --> 00:17:32.520
للاستعانة به في تسمية المتغيرات

00:17:33.080 --> 00:17:36.120
فتجد أن اسم المتغير myFirstName

00:17:36.120 --> 00:17:39.000
يحتوي على ثلاثة كلمات

00:17:39.940 --> 00:17:48.780
my و First و Name

00:17:49.060 --> 00:17:50.740
تحتوي على ثلاثة كلمات

00:17:51.400 --> 00:17:54.440
و لأن من قواعد كتابة المتغيرات

00:17:54.440 --> 00:17:56.440
عدم وجود أي مسافات في وسطه

00:17:57.300 --> 00:18:02.120
فلو قمت بكتابة الكلمات ملتصقة معاً بأحرف صغيرة

00:18:06.120 --> 00:18:09.600
سيكون من الصعب إيجاد بدايات الكلمات

00:18:09.600 --> 00:18:13.160
و بالتالي سيكون صعباً عليك قراءة هذا الاسم

00:18:14.140 --> 00:18:18.600
بالتالي قمنا بجعل أول حرف من كل كلمة

00:18:18.640 --> 00:18:20.980
حرفاً كبيراً , ما عدا أول حرف

00:18:21.640 --> 00:18:24.740
إذاً الحرف الأول سيبقى صغيراً

00:18:24.940 --> 00:18:27.520
و حرف الـ F هنا سيصبح كبيراً

00:18:27.940 --> 00:18:32.200
و حرف الـ N  هنا سيصبح كبيراً  أيضاً

00:18:32.640 --> 00:18:34.120
الملاحظة الثالثة

00:18:34.445 --> 00:18:38.475
لغة الـ #C لغة حساسة للأحرف

00:18:38.605 --> 00:18:42.925
و للتأكيد على حساسية لغة الـ #C لحالة الأحرف

00:18:42.925 --> 00:18:46.660
فلو قمت بتغيير المتغير myFirstName

00:18:46.900 --> 00:18:55.360
إلى myfirstname بأحرف صغيرة

00:18:55.560 --> 00:19:01.380
ستجد أنه قام بوضع خط أحمر متعرج

00:19:01.380 --> 00:19:03.480
تحت هذا المتغير

00:19:04.000 --> 00:19:08.180
و الذي يعني أن هذا المتغير غير معرف

00:19:10.180 --> 00:19:13.840
لأننا تكلمنا أن لغة ال #C لغة حساسة للأحرف

00:19:13.840 --> 00:19:14.700
Case Sensitive

00:19:15.200 --> 00:19:19.380
بالتالي فإن هذا المتغير مختلف تماماً عن المتغير

00:19:19.380 --> 00:19:21.760
الذي يحتوي على الـ Camel Casing

00:19:21.980 --> 00:19:25.440
من حيث الأحرف الصغيرة و الأحرف الكبيرة

00:19:25.920 --> 00:19:27.180
الملاحظة الرابعة

00:19:27.400 --> 00:19:29.660
لا يمكنك استخدام كلمات محجوزة

00:19:30.380 --> 00:19:32.780
فلا يمكنك تعريف اسم متغير مرتين

00:19:32.780 --> 00:19:35.460
و لا يمكنك استخدام اسم مطابق

00:19:35.460 --> 00:19:36.940
لكلمات لغة ال #C

00:19:36.940 --> 00:19:38.940
المحجوزة مسبقاً

00:19:39.100 --> 00:19:41.000
و لكي تفهم ما أقول

00:19:41.000 --> 00:19:44.700
لنفترض أني احتجت لحجز متغير جديد

00:19:44.700 --> 00:19:46.240
في ذاكرة الحاسوب

00:19:46.240 --> 00:19:49.300
و يحمل نفس الاسم myFirstName

00:19:54.080 --> 00:19:57.400
ستجد أن هناك خطاً أحمراً  متعرجاً

00:19:57.400 --> 00:19:59.040
ظهر تحت الاسم الجديد

00:19:59.040 --> 00:20:01.500
و كأن المترجم يقول لك :

00:20:02.000 --> 00:20:05.140
المعذرة لن أسمح لك بالمرور يا سيدي

00:20:05.140 --> 00:20:07.860
لأن البطاقة التي تحتوي على هذا الاسم

00:20:07.940 --> 00:20:10.040
قد تم أخذها مسبقاً

00:20:10.700 --> 00:20:13.720
و لو قمنا بالنظر إلى قائمة الـ Error List

00:20:13.720 --> 00:20:14.600
في الأسفل

00:20:15.820 --> 00:20:19.040
أو وضعنا المؤشر على مكان الخطأ

00:20:19.240 --> 00:20:21.240
سنجد رسالة

00:20:21.380 --> 00:20:24.300
A loal variable or function named

00:20:24.300 --> 00:20:26.820
' mYfirstName ' is already defined

00:20:26.820 --> 00:20:28.140
in this scope

00:20:28.800 --> 00:20:31.800
و التي تعني أن هذا الاسم موجود

00:20:31.800 --> 00:20:35.440
أو محجوز تم حجزه مسبقاً في هذا النطاق

00:20:35.900 --> 00:20:37.200
كما أنه أيضاً

00:20:37.460 --> 00:20:43.740
لا يمكنك حجز اسم متغير من كلمات لغة الـ #C

00:20:43.740 --> 00:20:47.640
مثلا أن تقول string  int

00:20:48.560 --> 00:20:50.840
لا يمكنك فعل ذلك لأن int

00:20:50.840 --> 00:20:52.840
هي كلمة محجوزة للغة الـ #C

00:20:53.560 --> 00:20:54.600
الملاحظة الخامسة

00:20:55.060 --> 00:20:58.100
حجز و اسناد قيمة في نفس السطر

00:20:58.200 --> 00:21:01.780
الحقيقة يمكنك حجز مساحة للمتغير

00:21:01.780 --> 00:21:04.860
و اعطائه قيمة أولية في نفس السطر

00:21:05.240 --> 00:21:09.160
فيمكننا الاستغناء عن السطر رقم 24

00:21:09.615 --> 00:21:15.080
و ذكر اسم المتغير في السطر رقم 25

00:21:17.140 --> 00:21:20.680
و هذه الطريقة تسمى Initialization

00:21:21.160 --> 00:21:25.080
و هي مهمة لأنه يتوجب عليك اعطاء قيمة أولية للمتغير

00:21:25.140 --> 00:21:27.260
في أقرب فرصة سنحت لك

00:21:27.260 --> 00:21:31.680
و بذلك تضع المتغير في وضع صحيح

00:21:33.020 --> 00:21:34.720
أيضاً أغلب المطورين

00:21:34.720 --> 00:21:37.360
يميلون للتقليل من حجم الأسطر البرمجية

00:21:37.580 --> 00:21:41.240
لتسريع كتابة التطبيق و تسهيل قراءته أيضاً

00:21:41.840 --> 00:21:44.700
الآن بعد التعرف على الـ Camel Casing

00:21:45.020 --> 00:21:48.800
و بعد التأكيد أن لغة الـ #C لغة حساسة للحروف

00:21:49.300 --> 00:21:52.540
لعلك تقع في حيرة من امرك و تسأل

00:21:53.280 --> 00:21:55.480
هل فعلاً يتوجب أن أقوم بحفظ

00:21:55.480 --> 00:21:56.720
كل هذه المتغيرات ؟

00:21:57.320 --> 00:22:00.680
و بما أن الحرف الكبير يختلف عن الحرف الصغير

00:22:01.180 --> 00:22:03.100
هل سأخفظ كل هذه المتغيرات

00:22:03.160 --> 00:22:04.820
حروفها الكبيرة و الصغيرة

00:22:05.260 --> 00:22:08.560
و الحقيقة أن الجواب على هذين السؤالين

00:22:08.560 --> 00:22:11.340
يعتمد على  طبيعة محرر النصوص

00:22:11.340 --> 00:22:13.340
الذي تقوم باستخدامه

00:22:14.140 --> 00:22:16.680
فسبب تشديدي منذ بداية السلسلة

00:22:16.680 --> 00:22:17.720
على اختيار برنامج

00:22:17.720 --> 00:22:19.040
Visual Studio الـ

00:22:19.040 --> 00:22:22.560
هو أنه يحتوي على خاصية الـ IntelliSens

00:22:22.560 --> 00:22:24.560
في محرر نصوصه

00:22:24.740 --> 00:22:26.620
فهناك العديد من المميزات

00:22:26.620 --> 00:22:28.620
التي تسهل عليك الكتابة

00:22:28.620 --> 00:22:31.580
فلو حاولت كتابة كلمة my

00:22:33.840 --> 00:22:37.620
ستجد نافذة صغيرة ظهرت أسفل الكلمة

00:22:37.940 --> 00:22:41.900
و تحتوي على أقرب احتمال لما أقوم بكتابته

00:22:42.360 --> 00:22:46.440
فيمكنك الاختيار بالأسهم ثم ضغط زر Enter

00:22:46.820 --> 00:22:51.760
لتجد أنه قام بإكمال الكلمة تلقائياً

00:22:52.040 --> 00:22:54.920
هذه الخاصية تمنعك من الوقوع

00:22:54.920 --> 00:22:57.700
في الأخطاء الإملائية Syntax Error

00:22:57.900 --> 00:23:01.200
و تزيد من كفاءتك كمطور للتطبيقات

00:23:01.580 --> 00:23:03.340
فلو رجعت في الفيديو

00:23:03.340 --> 00:23:06.780
لوجدت أني استخدمت هذه الميزة

00:23:06.780 --> 00:23:08.780
كثيراً خلال كتابتي للأسطر البرمجية

00:23:09.660 --> 00:23:14.520
و لم أقم بكتابة كل حروف الكلمة

00:23:14.520 --> 00:23:17.320
بشكلها الكبير و الصغير و هكذا

00:23:17.880 --> 00:23:21.480
الآن ماذا إن أردت معالجة البيانات

00:23:21.480 --> 00:23:23.020
التي يدخلها المستخدم

00:23:23.160 --> 00:23:25.440
لاحظ أننا في المثالين السابقين

00:23:26.040 --> 00:23:30.700
قمنا بأخذ نص و قمنا بطباعته كما هو

00:23:31.440 --> 00:23:34.900
لكننا الآن سنقوم بكتابة تطبيق جديد

00:23:35.240 --> 00:23:38.600
يطلب من المستخدم عددين

00:23:38.940 --> 00:23:41.880
و سنقوم بطباعة حاصل جمعهما

00:23:42.320 --> 00:23:45.140
في البداية سأقوم بجعل الأسطر السابقة

00:23:45.140 --> 00:23:46.400
جمل ملاحظات

00:23:48.000 --> 00:23:49.500
تعلمنا ذلك

00:23:49.500 --> 00:23:52.980
يمكن أن أقوم باستخدام فقرة الملاحظة

00:23:56.300 --> 00:23:59.480
و سأقوم بكتابة التالي

00:24:00.645 --> 00:24:10.045
للسرعة قمت بكتابته و سأضعه هنا  لنقوم بمناقشته

00:24:12.375 --> 00:24:15.180
لاحظ هنا أنني قمت

00:24:16.500 --> 00:24:18.880
بطباعة Enter #1

00:24:18.880 --> 00:24:20.380
أدخل الرقم الأول :

00:24:20.380 --> 00:24:22.380
ثم قمت بتعريف int

00:24:22.380 --> 00:24:24.620
myFirstNumber

00:24:24.620 --> 00:24:26.540
و تساوي Console.ReadLine

00:24:26.540 --> 00:24:30.420
يقوم هنا بقراءة المتغير أو المدخلات

00:24:30.680 --> 00:24:32.680
من المستخدم

00:24:32.680 --> 00:24:35.660
و يقوم مباشرة بإسنادها إلى المتغير myFirstNumber

00:24:36.080 --> 00:24:38.020
نفس المثال السابق تماماً

00:24:38.220 --> 00:24:42.400
عدا عن أنني هنا أقوم بطباعة

00:24:42.400 --> 00:24:44.660
حاصل مجموع العدد الأول و الثاني

00:24:44.900 --> 00:24:50.680
باستخدام اشارة + (من منظور رياضي)

00:24:50.980 --> 00:24:53.800
و وضعها في متغير جديد اسمه sum

00:24:54.500 --> 00:24:57.880
sum من summation   و تعني الجمع

00:24:57.880 --> 00:24:59.860
و من ثم اقوم بطباعة جملة أن

00:24:59.860 --> 00:25:01.860
جمع العددين السابقين

00:25:01.860 --> 00:25:05.040
هي قيمة الجمع أو حاصل الجمع

00:25:05.300 --> 00:25:06.820
و في آخر جملة هنا

00:25:06.820 --> 00:25:11.600
أقوم بعملية انتظار للمخرجات

00:25:11.600 --> 00:25:13.600
أو انتظار  لكي أرى النتائج التي ستظهر هنا

00:25:15.260 --> 00:25:18.300
لاحظ أنه يوجد خطآن هنا

00:25:18.300 --> 00:25:23.220
ألا و هو في السطر رقم 36 و السطر رقم 38

00:25:23.220 --> 00:25:26.440
لو قمت بوضع الماوس على هذا الخطأ

00:25:26.440 --> 00:25:28.260
ستجد رسالة مفادها

00:25:28.260 --> 00:25:33.600
Cannot implicitly convert type string to int

00:25:33.780 --> 00:25:36.080
الحقيقة أن هذا الموضوع متقدم ،

00:25:36.080 --> 00:25:41.000
لكن لغرض هذا المثال

00:25:41.200 --> 00:25:43.460
سنقوم بالتعرف على دالة جديدة

00:25:43.460 --> 00:25:48.180
تقوم بتحويل النص إلى رقم عددي

00:25:48.660 --> 00:25:54.200
حيث أن الدالة ReadLine تقوم بقراءة المدخلات

00:25:54.200 --> 00:25:57.000
من المستخدم

00:25:57.000 --> 00:26:00.900
و تحويلها أو  و وضعها في متغير نصي

00:26:01.280 --> 00:26:07.200
لكن هنا أنا أقوم بوضع نص إلى متغير عددي

00:26:07.200 --> 00:26:08.220
و هذا لا يجوز

00:26:08.220 --> 00:26:11.140
يجب أن يكون أن أضع قيمة عددية

00:26:11.140 --> 00:26:12.180
لمتغير عددي

00:26:12.360 --> 00:26:16.500
لحل هذه المشكلة سنتعرف على method جديدة

00:26:16.620 --> 00:26:19.760
اسمها Parse

00:26:21.920 --> 00:26:24.580
و هي تقوم

00:26:24.840 --> 00:26:30.740
بمحاولة أخذ قيمة نصية و تحويلها إلى integer

00:26:31.135 --> 00:26:34.265
بمجرد أن قمت بوضع هذه الـ method  هنا

00:26:34.265 --> 00:26:37.840
لاحظ أن الخطأ أو الـ Error  ذهب

00:26:38.260 --> 00:26:41.580
سأقوم بتكرار ما قمت به سابقاً هنا

00:26:42.640 --> 00:26:48.100
و سأقوم بتنفيذ التطبيق لنقوم بمناقشته معاً

00:26:48.105 --> 00:26:52.000
سأقوم بحفظ البرنامج و ثم Start

00:26:53.820 --> 00:26:56.020
لاحظ أن التطبيق يخبرنا

00:26:56.020 --> 00:26:57.060
Enter #1

00:26:57.060 --> 00:26:59.060
سأدخل مثلاً رقم 6

00:26:59.300 --> 00:27:00.860
ثم Enter #2

00:27:01.100 --> 00:27:02.600
مثلاً 12

00:27:02.720 --> 00:27:06.620
لاحظ أن العدد أو summation هو 18

00:27:06.620 --> 00:27:08.620
و هي قيمة صحيحة

00:27:09.040 --> 00:27:13.740
حسناً لاحظ هنا أننا قمنا بأخد قيمة نصية

00:27:13.820 --> 00:27:16.120
و حولناها باستخدام هذه الـ method

00:27:16.120 --> 00:27:19.040
إلى قيمة عددية

00:27:19.860 --> 00:27:24.120
الآن هنا ملاحظة يجب أن نقوم بذكرها

00:27:24.500 --> 00:27:28.200
إن حاولت أن تقوم بإدخال قيمة

00:27:28.840 --> 00:27:30.160
حرف مثلاً هنا

00:27:32.140 --> 00:27:36.060
ستجد أن البرنامج قد أظهر خطأً

00:27:36.060 --> 00:27:38.480
هذا الخطأ ظهر أثناء التنفيذ

00:27:38.780 --> 00:27:42.060
و هو خطأ متقدم سنقوم إن شاء الله

00:27:42.060 --> 00:27:44.060
بالحديث عنه مستقبلاً

00:27:44.400 --> 00:27:46.300
لغرض التعلم الآن حالياً

00:27:46.300 --> 00:27:50.000
يمكنك فقط استخدام هذه الامثلة

00:27:50.000 --> 00:27:52.080
و التأكد من أن القيم المدخلة

00:27:53.080 --> 00:27:54.640
هي قيم عددية

00:27:55.020 --> 00:28:00.100
طبعاً في الواقع الحقيقي لا يمكننا تجاهل هذا الأمر

00:28:00.420 --> 00:28:05.920
فمثلاً إن قام المستخدم بطباعة حرف بدل الأرقام

00:28:05.920 --> 00:28:07.660
ستظهر مشكلة في البرنامج

00:28:07.660 --> 00:28:10.900
أن شاء الله في الدروس القادمة

00:28:11.120 --> 00:28:13.860
سنتعرف كيف نقوم بحل هذه المشاكل

00:28:14.160 --> 00:28:16.780
و تنبؤ وقوع المشكلة حتى قبل أن تقع

00:28:17.800 --> 00:28:20.980
إذاً سنقوم هنا مرة أخرى بإدخال القيم

00:28:20.980 --> 00:28:22.980
و سيقوم بإيجاد الناتج

00:28:24.020 --> 00:28:27.880
ملخص الدرس أن حجز المتغير يتم بـــ

00:28:27.880 --> 00:28:29.960
ذكر نوع البيانات التي سيحملها

00:28:30.200 --> 00:28:32.580
متبوعاً باسم المتغير

00:28:32.580 --> 00:28:36.020
الذي سنقوم بمناداته كلما احتجنا إليه

00:28:36.540 --> 00:28:39.440
و يمكن أيضاً إعطاؤه قيمة أولية

00:28:39.440 --> 00:28:42.100
في نفس السطر كما هو ظاهر على الشاشة

00:28:42.100 --> 00:28:45.120
و أسمينا هذه العملية Initialization

00:28:45.980 --> 00:28:49.340
أما بالنسة لقواعد تسمية المتغيرات

00:28:49.780 --> 00:28:52.240
فيمكن تلخيصها بالنقاط التالية :

00:28:52.860 --> 00:28:54.940
أولاً  : أن يبدأ بحرف ،

00:28:54.940 --> 00:28:56.940
و يمكن استخدام الحروف العربية

00:28:56.940 --> 00:28:58.940
و لكنني لا أحبذ ذلك

00:28:59.360 --> 00:29:02.840
ثانياً : يجوز استخدام الرمز Under score _

00:29:03.000 --> 00:29:04.320
كما هو ظاهر على الشاشة

00:29:04.320 --> 00:29:08.740
في البداية أو أي مكان آخر خلال كتابتك للمتغير

00:29:09.580 --> 00:29:13.980
ثالثاً : لا يجوز استخدام المسافات في وسط الاسم

00:29:14.715 --> 00:29:18.920
رابعاً : يجوز استخدام الأرقام عدا في أول خانة

00:29:19.860 --> 00:29:24.560
خامساً : ألا يكون اسم المتغير محجوزاً سابقاً ،

00:29:24.740 --> 00:29:28.200
أو من اسماء كلمات اللغة المحجوزة

00:29:30.040 --> 00:29:35.020
سادساً : لغة الـ#C لغة حساسة للأحرف Case

00:29:35.020 --> 00:29:36.620
Case  Sensitive

00:29:37.020 --> 00:29:39.760
فالمتغير Age بحرف كبير في البداية

00:29:39.960 --> 00:29:43.360
يختلف عن المتغير AGE بحروف كبيرة كلياً

00:29:43.360 --> 00:29:47.580
فالكلمتين تؤديان إلى مكانين مختلفين في الذاكرة

00:29:48.240 --> 00:29:51.355
إلى هنا نكون قد وصلنا إلى نهاية درسنا

00:29:51.360 --> 00:29:54.260
لكني سأطلب منك قبل أن ننتهي

00:29:54.260 --> 00:29:58.880
أن تقوم بكتابة تطبيق يسأل المستخدم عن ادخال عددين

00:29:59.440 --> 00:30:02.880
و يقوم بتخزين العددين في متغيرين

00:30:03.020 --> 00:30:06.760
لأننا سنقوم بطباعة  5 جمل حسابية

00:30:07.220 --> 00:30:12.260
الجملة الأولى ستظهر حاصل مجموع العددين

00:30:12.520 --> 00:30:15.820
الجملة الثانية ستكون حاصل طرح العددين

00:30:16.140 --> 00:30:19.360
الجملة الثالثة ستكون حاصل ضرب العددين

00:30:19.360 --> 00:30:23.140
و الجملة الرابعة ستكون حاصل قسمة العددين

00:30:23.340 --> 00:30:27.940
و الجملة الأخيرة ستكتب الجملة التالية :

00:30:27.940 --> 00:30:31.160
This Program Developed By

00:30:31.160 --> 00:30:33.160
و أضف اسمك إليه

00:30:33.220 --> 00:30:35.200
مع العلم أن اشارات العمليات التي

00:30:35.200 --> 00:30:38.900
ستحتاجها هي الظاهرة على الشاشة

00:30:39.100 --> 00:30:43.300
الزائد , و الناقص , و اشارة النجمة , و الـ Slash

00:30:48.480 --> 00:30:51.180
قم بكتابة التطبيق و بعد الانتهاء منه

00:30:51.180 --> 00:30:54.500
قم بأخذ صورة للمخرجات من شاشة الـ Console

00:30:54.780 --> 00:30:58.095
و أضف الصورة إلى حسابك على Twitter أو Facebook

00:30:58.100 --> 00:31:00.080
و لا تنسَ أن تقوم بمعمل

00:31:00.080 --> 00:31:01.820
منشن mention لحسابي الشخصي

00:31:01.820 --> 00:31:03.700
و ارفاق هاشتاغ #طورني

00:31:03.820 --> 00:31:05.900
لأقوم بإلقاء نظرة عليه

00:31:06.420 --> 00:31:10.200
هناك من سيقوم بعمل التطبيق بشكل بسيط

00:31:10.720 --> 00:31:14.140
لكنني متأكد أن هناك من سيقوم

00:31:14.140 --> 00:31:18.220
بوضع لمساته السحرية ليتميز عن غيره

00:31:18.520 --> 00:31:20.660
نصل إلى نهاية درسنا

00:31:20.660 --> 00:31:23.720
ألقاك في الدرس التالي إن شاء الله

00:31:38.700 --> 00:31:39.700
السلام عليكم

